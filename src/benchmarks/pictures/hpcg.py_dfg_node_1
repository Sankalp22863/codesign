digraph {
	0 [label="source code:
import math
import time
import numpy as np
def rosenbrock(x):...
def grad_rosen(x):...
def hessian_rosen(x):...
def wolfe(f, g, xk, alpha, pk):...
def strong_wolfe(f, g, xk, alpha, pk, c2):...
def gold_stein(f, g, xk, alpha, pk, c):...
def step_length(f, g, xk, alpha, pk, c2):...
def interpolation(f, g, f_alpha, g_alpha, alpha, c2, strong_wolfe_alpha,...
def conjugate_gradient(f, g, x0, iterations, error):...
if __name__ == '__main__':
"]
	1 [label="__name__
Read"]
	2 [label=__main__
]
	3 [label="==
"]
	1 -> 3 [label=""]
	2 -> 3 [label=""]
}
