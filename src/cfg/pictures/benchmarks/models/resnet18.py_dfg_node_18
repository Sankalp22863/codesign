digraph {
	0 [label="source code:
f_len = int((len(img[0]) - len(filt[0]) + 2 * zero_pad) / stride + 1)
f_wid = int((len(img[0][0]) - len(filt[0][0]) + 2 * zero_pad) / stride + 1)
biases = np.random.rand(f_len)
img_new = zero_pad_arr(img, zero_pad)
f_new = np.zeros((numFilt, f_len, f_wid))
"]
	1 [label="f_len
Write"]
	3 [label="int
Write"]
	5 [label="+"]
	8 [label="//"]
	11 [label="+"]
	14 [label="-"]
	17 [label="len
Write"]
	18 [label="img
Read"]
	18 -> 17
	17 -> 14
	19 [label="len
Write"]
	20 [label="filt
Read"]
	20 -> 19
	19 -> 14
	14 -> 11
	21 [label="*"]
	22 [label=2]
	22 -> 21
	23 [label="zero_pad
Read"]
	23 -> 21
	21 -> 11
	11 -> 8
	10 [label="stride
Read"]
	10 -> 8
	8 -> 5
	7 [label=1]
	7 -> 5
	5 -> 3
	3 -> 1
	24 [label="f_wid
Write"]
	26 [label="int
Write"]
	28 [label="+"]
	31 [label="//"]
	34 [label="+"]
	37 [label="-"]
	40 [label="len
Write"]
	41 [label="img
Read"]
	41 -> 40
	40 -> 37
	42 [label="len
Write"]
	43 [label="filt
Read"]
	43 -> 42
	42 -> 37
	37 -> 34
	44 [label="*"]
	45 [label=2]
	45 -> 44
	46 [label="zero_pad
Read"]
	46 -> 44
	44 -> 34
	34 -> 31
	33 [label="stride
Read"]
	33 -> 31
	31 -> 28
	30 [label=1]
	30 -> 28
	28 -> 26
	26 -> 24
	47 [label="biases
Write"]
	49 [label="np
Write"]
	50 [label="f_len
Read"]
	50 -> 49
	49 -> 47
	51 [label="img_new
Write"]
	53 [label="zero_pad_arr
Write"]
	54 [label="img
Read"]
	54 -> 53
	55 [label="zero_pad
Read"]
	55 -> 53
	53 -> 51
	56 [label="f_new
Write"]
	58 [label="np
Write"]
	58 -> 56
	1 -> 50
}
