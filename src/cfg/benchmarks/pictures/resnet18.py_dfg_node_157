digraph {
	691 [label="source code:
filt = np.random.rand(1, len(filt[0]), len(filt[0][0]))
byPass = np.copy(img)
byPass = conv_layer(byPass, filt, 1, 3, 2)
byPass = BN_layer(byPass, 1, weights, biases)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 2)
img += byPass
img = reLU(img)
byPass = np.copy(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img += byPass
img = reLU(img)
filt = np.random.rand(1, len(filt[0]), len(filt[0][0]))
byPass = np.copy(img)
byPass = conv_layer(byPass, filt, 1, 3, 2)
byPass = BN_layer(byPass, 1, weights, biases)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 2)
img += byPass
img = reLU(img)
byPass = np.copy(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img += byPass
img = reLU(img)
filt = np.random.rand(1, len(filt[0]), len(filt[0][0]))
byPass = np.copy(img)
byPass = conv_layer(byPass, filt, 1, 3, 2)
byPass = BN_layer(byPass, 1, weights, biases)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 2)
img += byPass
img = reLU(img)
byPass = np.copy(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img = reLU(img)
img = conv_layer(img, filt, 1, 3, 1)
img = BN_layer(img, 1, weights, biases)
img += byPass
img = reLU(img)
img = avg_pool(img, len(img[0]), len(img[0][0]), 3, 1)
flat = flatten_layer(img)
weights = np.random.rand(len(img) * len(img[0]) * len(img[0][0]), 7)
w_0 = np.random.rand(7)
flat = fc_layer(flat, weights, w_0)
final = softmax(flat)
return 0
"]
	692 [label="np.random.rand(1, len(filt[0]), len(filt[0][0]))
"]
	693 [label=1
]
	693 -> 692
	694 [label="len(filt[0])
"]
	695 [label="filt
Read"]
	696 [label="filt[0]
Read"]
	695 -> 696
	696 -> 694
	694 -> 692
	697 [label="len(filt[0][0])
"]
	698 [label="filt
Read"]
	699 [label="filt[0]
Read"]
	698 -> 699
	700 [label="filt[0][0]
Read"]
	699 -> 700
	700 -> 697
	697 -> 692
	701 [label="filt
Write"]
	692 -> 701
	702 [label="np.copy(img)
"]
	703 [label="img
Read"]
	703 -> 702
	704 [label="byPass
Write"]
	702 -> 704
	705 [label="conv_layer(byPass, filt, 1, 3, 2)
"]
	706 [label="byPass
Read"]
	706 -> 705
	707 [label="filt
Read"]
	707 -> 705
	708 [label=1
]
	708 -> 705
	709 [label=3
]
	709 -> 705
	710 [label=2
]
	710 -> 705
	711 [label="byPass
Write"]
	705 -> 711
	712 [label="BN_layer(byPass, 1, weights, biases)
"]
	713 [label="byPass
Read"]
	713 -> 712
	714 [label=1
]
	714 -> 712
	715 [label="weights
Read"]
	715 -> 712
	716 [label="biases
Read"]
	716 -> 712
	717 [label="byPass
Write"]
	712 -> 717
	718 [label="conv_layer(img, filt, 1, 3, 1)
"]
	719 [label="img
Read"]
	719 -> 718
	720 [label="filt
Read"]
	720 -> 718
	721 [label=1
]
	721 -> 718
	722 [label=3
]
	722 -> 718
	723 [label=1
]
	723 -> 718
	724 [label="img
Write"]
	718 -> 724
	725 [label="BN_layer(img, 1, weights, biases)
"]
	726 [label="img
Read"]
	726 -> 725
	727 [label=1
]
	727 -> 725
	728 [label="weights
Read"]
	728 -> 725
	729 [label="biases
Read"]
	729 -> 725
	730 [label="img
Write"]
	725 -> 730
	731 [label="reLU(img)
"]
	732 [label="img
Read"]
	732 -> 731
	733 [label="img
Write"]
	731 -> 733
	734 [label="conv_layer(img, filt, 1, 3, 2)
"]
	735 [label="img
Read"]
	735 -> 734
	736 [label="filt
Read"]
	736 -> 734
	737 [label=1
]
	737 -> 734
	738 [label=3
]
	738 -> 734
	739 [label=2
]
	739 -> 734
	740 [label="img
Write"]
	734 -> 740
	741 [label="byPass
Read"]
	742 [label="img
Read"]
	743 [label="+
"]
	741 -> 743
	742 -> 743
	744 [label="img
Write"]
	743 -> 744
	745 [label="reLU(img)
"]
	746 [label="img
Read"]
	746 -> 745
	747 [label="img
Write"]
	745 -> 747
	748 [label="np.copy(img)
"]
	749 [label="img
Read"]
	749 -> 748
	750 [label="byPass
Write"]
	748 -> 750
	751 [label="conv_layer(img, filt, 1, 3, 1)
"]
	752 [label="img
Read"]
	752 -> 751
	753 [label="filt
Read"]
	753 -> 751
	754 [label=1
]
	754 -> 751
	755 [label=3
]
	755 -> 751
	756 [label=1
]
	756 -> 751
	757 [label="img
Write"]
	751 -> 757
	758 [label="BN_layer(img, 1, weights, biases)
"]
	759 [label="img
Read"]
	759 -> 758
	760 [label=1
]
	760 -> 758
	761 [label="weights
Read"]
	761 -> 758
	762 [label="biases
Read"]
	762 -> 758
	763 [label="img
Write"]
	758 -> 763
	764 [label="reLU(img)
"]
	765 [label="img
Read"]
	765 -> 764
	766 [label="img
Write"]
	764 -> 766
	767 [label="conv_layer(img, filt, 1, 3, 1)
"]
	768 [label="img
Read"]
	768 -> 767
	769 [label="filt
Read"]
	769 -> 767
	770 [label=1
]
	770 -> 767
	771 [label=3
]
	771 -> 767
	772 [label=1
]
	772 -> 767
	773 [label="img
Write"]
	767 -> 773
	774 [label="BN_layer(img, 1, weights, biases)
"]
	775 [label="img
Read"]
	775 -> 774
	776 [label=1
]
	776 -> 774
	777 [label="weights
Read"]
	777 -> 774
	778 [label="biases
Read"]
	778 -> 774
	779 [label="img
Write"]
	774 -> 779
	780 [label="byPass
Read"]
	781 [label="img
Read"]
	782 [label="+
"]
	780 -> 782
	781 -> 782
	783 [label="img
Write"]
	782 -> 783
	784 [label="reLU(img)
"]
	785 [label="img
Read"]
	785 -> 784
	786 [label="img
Write"]
	784 -> 786
	787 [label="np.random.rand(1, len(filt[0]), len(filt[0][0]))
"]
	788 [label=1
]
	788 -> 787
	789 [label="len(filt[0])
"]
	790 [label="filt
Read"]
	791 [label="filt[0]
Read"]
	790 -> 791
	791 -> 789
	789 -> 787
	792 [label="len(filt[0][0])
"]
	793 [label="filt
Read"]
	794 [label="filt[0]
Read"]
	793 -> 794
	795 [label="filt[0][0]
Read"]
	794 -> 795
	795 -> 792
	792 -> 787
	796 [label="filt
Write"]
	787 -> 796
	797 [label="np.copy(img)
"]
	798 [label="img
Read"]
	798 -> 797
	799 [label="byPass
Write"]
	797 -> 799
	800 [label="conv_layer(byPass, filt, 1, 3, 2)
"]
	801 [label="byPass
Read"]
	801 -> 800
	802 [label="filt
Read"]
	802 -> 800
	803 [label=1
]
	803 -> 800
	804 [label=3
]
	804 -> 800
	805 [label=2
]
	805 -> 800
	806 [label="byPass
Write"]
	800 -> 806
	807 [label="BN_layer(byPass, 1, weights, biases)
"]
	808 [label="byPass
Read"]
	808 -> 807
	809 [label=1
]
	809 -> 807
	810 [label="weights
Read"]
	810 -> 807
	811 [label="biases
Read"]
	811 -> 807
	812 [label="byPass
Write"]
	807 -> 812
	813 [label="conv_layer(img, filt, 1, 3, 1)
"]
	814 [label="img
Read"]
	814 -> 813
	815 [label="filt
Read"]
	815 -> 813
	816 [label=1
]
	816 -> 813
	817 [label=3
]
	817 -> 813
	818 [label=1
]
	818 -> 813
	819 [label="img
Write"]
	813 -> 819
	820 [label="BN_layer(img, 1, weights, biases)
"]
	821 [label="img
Read"]
	821 -> 820
	822 [label=1
]
	822 -> 820
	823 [label="weights
Read"]
	823 -> 820
	824 [label="biases
Read"]
	824 -> 820
	825 [label="img
Write"]
	820 -> 825
	826 [label="reLU(img)
"]
	827 [label="img
Read"]
	827 -> 826
	828 [label="img
Write"]
	826 -> 828
	829 [label="conv_layer(img, filt, 1, 3, 2)
"]
	830 [label="img
Read"]
	830 -> 829
	831 [label="filt
Read"]
	831 -> 829
	832 [label=1
]
	832 -> 829
	833 [label=3
]
	833 -> 829
	834 [label=2
]
	834 -> 829
	835 [label="img
Write"]
	829 -> 835
	836 [label="byPass
Read"]
	837 [label="img
Read"]
	838 [label="+
"]
	836 -> 838
	837 -> 838
	839 [label="img
Write"]
	838 -> 839
	840 [label="reLU(img)
"]
	841 [label="img
Read"]
	841 -> 840
	842 [label="img
Write"]
	840 -> 842
	843 [label="np.copy(img)
"]
	844 [label="img
Read"]
	844 -> 843
	845 [label="byPass
Write"]
	843 -> 845
	846 [label="conv_layer(img, filt, 1, 3, 1)
"]
	847 [label="img
Read"]
	847 -> 846
	848 [label="filt
Read"]
	848 -> 846
	849 [label=1
]
	849 -> 846
	850 [label=3
]
	850 -> 846
	851 [label=1
]
	851 -> 846
	852 [label="img
Write"]
	846 -> 852
	853 [label="BN_layer(img, 1, weights, biases)
"]
	854 [label="img
Read"]
	854 -> 853
	855 [label=1
]
	855 -> 853
	856 [label="weights
Read"]
	856 -> 853
	857 [label="biases
Read"]
	857 -> 853
	858 [label="img
Write"]
	853 -> 858
	859 [label="reLU(img)
"]
	860 [label="img
Read"]
	860 -> 859
	861 [label="img
Write"]
	859 -> 861
	862 [label="conv_layer(img, filt, 1, 3, 1)
"]
	863 [label="img
Read"]
	863 -> 862
	864 [label="filt
Read"]
	864 -> 862
	865 [label=1
]
	865 -> 862
	866 [label=3
]
	866 -> 862
	867 [label=1
]
	867 -> 862
	868 [label="img
Write"]
	862 -> 868
	869 [label="BN_layer(img, 1, weights, biases)
"]
	870 [label="img
Read"]
	870 -> 869
	871 [label=1
]
	871 -> 869
	872 [label="weights
Read"]
	872 -> 869
	873 [label="biases
Read"]
	873 -> 869
	874 [label="img
Write"]
	869 -> 874
	875 [label="byPass
Read"]
	876 [label="img
Read"]
	877 [label="+
"]
	875 -> 877
	876 -> 877
	878 [label="img
Write"]
	877 -> 878
	879 [label="reLU(img)
"]
	880 [label="img
Read"]
	880 -> 879
	881 [label="img
Write"]
	879 -> 881
	882 [label="np.random.rand(1, len(filt[0]), len(filt[0][0]))
"]
	883 [label=1
]
	883 -> 882
	884 [label="len(filt[0])
"]
	885 [label="filt
Read"]
	886 [label="filt[0]
Read"]
	885 -> 886
	886 -> 884
	884 -> 882
	887 [label="len(filt[0][0])
"]
	888 [label="filt
Read"]
	889 [label="filt[0]
Read"]
	888 -> 889
	890 [label="filt[0][0]
Read"]
	889 -> 890
	890 -> 887
	887 -> 882
	891 [label="filt
Write"]
	882 -> 891
	892 [label="np.copy(img)
"]
	893 [label="img
Read"]
	893 -> 892
	894 [label="byPass
Write"]
	892 -> 894
	895 [label="conv_layer(byPass, filt, 1, 3, 2)
"]
	896 [label="byPass
Read"]
	896 -> 895
	897 [label="filt
Read"]
	897 -> 895
	898 [label=1
]
	898 -> 895
	899 [label=3
]
	899 -> 895
	900 [label=2
]
	900 -> 895
	901 [label="byPass
Write"]
	895 -> 901
	902 [label="BN_layer(byPass, 1, weights, biases)
"]
	903 [label="byPass
Read"]
	903 -> 902
	904 [label=1
]
	904 -> 902
	905 [label="weights
Read"]
	905 -> 902
	906 [label="biases
Read"]
	906 -> 902
	907 [label="byPass
Write"]
	902 -> 907
	908 [label="conv_layer(img, filt, 1, 3, 1)
"]
	909 [label="img
Read"]
	909 -> 908
	910 [label="filt
Read"]
	910 -> 908
	911 [label=1
]
	911 -> 908
	912 [label=3
]
	912 -> 908
	913 [label=1
]
	913 -> 908
	914 [label="img
Write"]
	908 -> 914
	915 [label="BN_layer(img, 1, weights, biases)
"]
	916 [label="img
Read"]
	916 -> 915
	917 [label=1
]
	917 -> 915
	918 [label="weights
Read"]
	918 -> 915
	919 [label="biases
Read"]
	919 -> 915
	920 [label="img
Write"]
	915 -> 920
	921 [label="reLU(img)
"]
	922 [label="img
Read"]
	922 -> 921
	923 [label="img
Write"]
	921 -> 923
	924 [label="conv_layer(img, filt, 1, 3, 2)
"]
	925 [label="img
Read"]
	925 -> 924
	926 [label="filt
Read"]
	926 -> 924
	927 [label=1
]
	927 -> 924
	928 [label=3
]
	928 -> 924
	929 [label=2
]
	929 -> 924
	930 [label="img
Write"]
	924 -> 930
	931 [label="byPass
Read"]
	932 [label="img
Read"]
	933 [label="+
"]
	931 -> 933
	932 -> 933
	934 [label="img
Write"]
	933 -> 934
	935 [label="reLU(img)
"]
	936 [label="img
Read"]
	936 -> 935
	937 [label="img
Write"]
	935 -> 937
	938 [label="np.copy(img)
"]
	939 [label="img
Read"]
	939 -> 938
	940 [label="byPass
Write"]
	938 -> 940
	941 [label="conv_layer(img, filt, 1, 3, 1)
"]
	942 [label="img
Read"]
	942 -> 941
	943 [label="filt
Read"]
	943 -> 941
	944 [label=1
]
	944 -> 941
	945 [label=3
]
	945 -> 941
	946 [label=1
]
	946 -> 941
	947 [label="img
Write"]
	941 -> 947
	948 [label="BN_layer(img, 1, weights, biases)
"]
	949 [label="img
Read"]
	949 -> 948
	950 [label=1
]
	950 -> 948
	951 [label="weights
Read"]
	951 -> 948
	952 [label="biases
Read"]
	952 -> 948
	953 [label="img
Write"]
	948 -> 953
	954 [label="reLU(img)
"]
	955 [label="img
Read"]
	955 -> 954
	956 [label="img
Write"]
	954 -> 956
	957 [label="conv_layer(img, filt, 1, 3, 1)
"]
	958 [label="img
Read"]
	958 -> 957
	959 [label="filt
Read"]
	959 -> 957
	960 [label=1
]
	960 -> 957
	961 [label=3
]
	961 -> 957
	962 [label=1
]
	962 -> 957
	963 [label="img
Write"]
	957 -> 963
	964 [label="BN_layer(img, 1, weights, biases)
"]
	965 [label="img
Read"]
	965 -> 964
	966 [label=1
]
	966 -> 964
	967 [label="weights
Read"]
	967 -> 964
	968 [label="biases
Read"]
	968 -> 964
	969 [label="img
Write"]
	964 -> 969
	970 [label="byPass
Read"]
	971 [label="img
Read"]
	972 [label="+
"]
	970 -> 972
	971 -> 972
	973 [label="img
Write"]
	972 -> 973
	974 [label="reLU(img)
"]
	975 [label="img
Read"]
	975 -> 974
	976 [label="img
Write"]
	974 -> 976
	977 [label="avg_pool(img, len(img[0]), len(img[0][0]), 3, 1)
"]
	978 [label="img
Read"]
	978 -> 977
	979 [label="len(img[0])
"]
	980 [label="img
Read"]
	981 [label="img[0]
Read"]
	980 -> 981
	981 -> 979
	979 -> 977
	982 [label="len(img[0][0])
"]
	983 [label="img
Read"]
	984 [label="img[0]
Read"]
	983 -> 984
	985 [label="img[0][0]
Read"]
	984 -> 985
	985 -> 982
	982 -> 977
	986 [label=3
]
	986 -> 977
	987 [label=1
]
	987 -> 977
	988 [label="img
Write"]
	977 -> 988
	989 [label="flatten_layer(img)
"]
	990 [label="img
Read"]
	990 -> 989
	991 [label="flat
Write"]
	989 -> 991
	992 [label="np.random.rand(len(img) * len(img[0]) * len(img[0][0]), 7)
"]
	993 [label="len(img)
"]
	994 [label="img
Read"]
	994 -> 993
	995 [label="len(img[0])
"]
	996 [label="img
Read"]
	997 [label="img[0]
Read"]
	996 -> 997
	997 -> 995
	998 [label="*
"]
	993 -> 998
	995 -> 998
	999 [label="len(img[0][0])
"]
	1000 [label="img
Read"]
	1001 [label="img[0]
Read"]
	1000 -> 1001
	1002 [label="img[0][0]
Read"]
	1001 -> 1002
	1002 -> 999
	1003 [label="*
"]
	998 -> 1003
	999 -> 1003
	1003 -> 992
	1004 [label=7
]
	1004 -> 992
	1005 [label="weights
Write"]
	992 -> 1005
	1006 [label="np.random.rand(7)
"]
	1007 [label=7
]
	1007 -> 1006
	1008 [label="w_0
Write"]
	1006 -> 1008
	1009 [label="fc_layer(flat, weights, w_0)
"]
	1010 [label="flat
Read"]
	1010 -> 1009
	1011 [label="weights
Read"]
	1011 -> 1009
	1012 [label="w_0
Read"]
	1012 -> 1009
	1013 [label="flat
Write"]
	1009 -> 1013
	1014 [label="softmax(flat)
"]
	1015 [label="flat
Read"]
	1015 -> 1014
	1016 [label="final
Write"]
	1014 -> 1016
}
